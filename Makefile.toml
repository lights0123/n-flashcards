[tasks.init]
install_crate = { rustup_component_name = "rust-src" }

[tasks.build-release]
env = { "CARGO_INCREMENTAL" = "0" }
command = "cargo"
args = ["xbuild", "--target", "armv5te-nspire-eabi.json", "--release", "--color", "always"]

[tasks.build]
command = "cargo"
args = ["xbuild", "--target", "armv5te-nspire-eabi.json", "--color", "always"]

[tasks.dev]
dependencies = ["build"]
script = [
'''
NAME="$CARGO_MAKE_CRATE_NAME"
TARGET_DIR="$(cargo metadata --format-version 1 | jq -r '.target_directory')"
TARGET=armv5te-nspire-eabi
MANIFEST="$(cargo read-manifest)"
FRIENDLY_NAME="$(jq -r '.metadata.zehn.name' <<< "$MANIFEST" )"
COMPRESS="$(jq -r '.metadata.zehn.compress' <<< "$MANIFEST" )"
NOTICE="$(jq -r '.metadata.zehn.notice' <<< "$MANIFEST" )"
ADD_FLAGS="$(jq -r '.metadata.zehn.flags' <<< "$MANIFEST" )"
VERSION="$(jq -r '.version' <<< "$MANIFEST" )"
AUTHORS="$(jq -r '.authors | join(" ")' <<< "$MANIFEST" )"
FLAGS=()
[ "$COMPRESS" = "true" ] && FLAGS+=("--compress")
[ "$FRIENDLY_NAME" != "null" ] && FLAGS+=("--name" "$FRIENDLY_NAME")
[ "$NOTICE" != "null" ] && FLAGS+=("--notice" "$NOTICE")
[ "$VERSION" != "null" ] && FLAGS+=("--version" $(sed 's@^[^0-9]*\([0-9]\+\).*@\1@' <<< "$VERSION"))
[ "$AUTHORS" != "null" ] && FLAGS+=("--author" "$AUTHORS")
[ "$ADD_FLAGS" != "null" ] && eval FLAGS+=($ADD_FLAGS)

genzehn --input "$TARGET_DIR/$TARGET/debug/$NAME" --output "$TARGET_DIR/$TARGET/debug/$NAME.zehn" "${FLAGS[@]}"
make-prg "$TARGET_DIR/$TARGET/debug/$NAME.zehn" "$TARGET_DIR/$TARGET/debug/$NAME.tns"
'''
]

[tasks.release]
dependencies = ["build-release"]
script = [
'''
NAME="$CARGO_MAKE_CRATE_NAME"
TARGET_DIR="$(cargo metadata --format-version 1 | jq -r '.target_directory')"
TARGET=armv5te-nspire-eabi
MANIFEST="$(cargo read-manifest)"
FRIENDLY_NAME="$(jq -r '.metadata.zehn.name' <<< "$MANIFEST" )"
COMPRESS="$(jq -r '.metadata.zehn.compress' <<< "$MANIFEST" )"
NOTICE="$(jq -r '.metadata.zehn.notice' <<< "$MANIFEST" )"
ADD_FLAGS="$(jq -r '.metadata.zehn.flags' <<< "$MANIFEST" )"
VERSION="$(jq -r '.version' <<< "$MANIFEST" )"
AUTHORS="$(jq -r '.authors | join(" ")' <<< "$MANIFEST" )"
FLAGS=()
[ "$COMPRESS" = "true" ] && FLAGS+=("--compress")
[ "$FRIENDLY_NAME" != "null" ] && FLAGS+=("--name" "$FRIENDLY_NAME")
[ "$NOTICE" != "null" ] && FLAGS+=("--notice" "$NOTICE")
[ "$VERSION" != "null" ] && FLAGS+=("--version" $(sed 's@^[^0-9]*\([0-9]\+\).*@\1@' <<< "$VERSION"))
[ "$AUTHORS" != "null" ] && FLAGS+=("--author" "$AUTHORS")
[ "$ADD_FLAGS" != "null" ] && eval FLAGS+=($ADD_FLAGS)

genzehn --input "$TARGET_DIR/$TARGET/release/$NAME" --output "$TARGET_DIR/$TARGET/release/$NAME.zehn" "${FLAGS[@]}"
make-prg "$TARGET_DIR/$TARGET/release/$NAME.zehn" "$TARGET_DIR/$TARGET/release/$NAME.tns"
'''
]

[tasks.run]
dependencies = ["release"]
script = [
'''
NAME="$CARGO_MAKE_CRATE_NAME"
TARGET_DIR="$(cargo metadata --format-version 1 | jq -r '.target_directory')"
TARGET=armv5te-nspire-eabi

firebird-send "$TARGET_DIR/$TARGET/release/$NAME.tns" /ndless
'''
]
